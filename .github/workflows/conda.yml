name: Build and upload conda packages
on:
  release:
    types: ['released', 'prereleased']
# lets add on PR for testing
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']
  workflow_dispatch:        # Un comment line if you also want to trigger action manually

jobs:
  conda_deployment_with_new_tag:
    name: Conda deployment of package with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
#    runs-on: [self-hosted, gpu]
    strategy:
      matrix:
        python-version: ["3.11"]
        cuda-version: ["12.1"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Mamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: devtools/conda-envs/build_env.yaml    # Path to the build conda environment
          cache-environment: true
          cache-downloads: true
          generate-run-shell: true
      - name: Enforce .tar.bz2 packages
        # Temporary work-arounds while the action uibcdf/action-build-and-upload-conda-packages gets updated:
        # We create a `~/.condarc` file with the correct options to enforce the use of `.tar.bz2` packages
        # and we set the channels to be used by conda build
        shell: micromamba-shell {0}
        run: |
          cat > ~/.condarc << EOF
          conda-build:
            pkg_format: .tar.bz2
          channels:
            - conda-forge
            - nodefaults
          
          EOF
      - name: Build and upload the conda packages
        uses: uibcdf/action-build-and-upload-conda-packages@v1.4.0
        env:
          CUDA_VERSION: ${{ matrix.cuda-version }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          UAMMD_STRUCTURED_PACKAGE_NAME: uammd-structured
          UAMMD_PRECISION: SINGLE
        with:
          meta_yaml_dir: devtools/conda-build
          python-version: ${{ matrix.python-version }}
          user: ComplexFluidsUAM
          label: main
          overwrite: true
          upload: true
          token: ${{ secrets.ANACONDA_TOKEN }}
      - name: Check for broken packages
        shell: bash
        run: |
          if compgen -G "$CONDA_PREFIX/conda-bld/broken/*.tar.bz2" > /dev/null; then
            echo "Conda build failed: broken packages found"
            exit 1
          fi
      
